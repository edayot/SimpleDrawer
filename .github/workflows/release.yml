name: Make a release
on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Overide the automatic version bump (default: automatic)'
        required: true
        default: 'automatic'
        type: choice
        options:
        - automatic
        - patch
        - minor
        - major

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Setup cache for dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{  runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install
      - name: Apt update
        run: | 
          sudo apt-get update -qq -y
          export DEBIAN_FRONTEND=noninteractive
      - name: Setup OpenGl
        run: | 
          sudo apt-get -y install \
            freeglut3-dev \
            libgl1-mesa-dev \
            libxcursor-dev \
            libpulse-dev \
            libxinerama-dev \
            libxrandr-dev \
            libxv-dev \
            mesa-utils \
            libgl1-mesa-glx \
            mesa-common-dev \
            libglapi-mesa \
            libgbm1 \
            libgl1-mesa-dri \
            libsdl1.2-dev \
            libfreetype6-dev \
            xvfb \
            x11-utils
      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION_BUMP: ${{ github.event.inputs.version_bump }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "action@github.com"
          # print the version bump
          echo "Version bump: $VERSION_BUMP"
          if [ "$VERSION_BUMP" = "automatic" ]; then
            COMMAND="poetry run semantic-release -v version"
          fi
          if [ "$VERSION_BUMP" = "patch" ]; then
            COMMAND="poetry run semantic-release -v version --patch"
          fi
          if [ "$VERSION_BUMP" = "minor" ]; then
            COMMAND="poetry run semantic-release -v version --minor"
          fi
          if [ "$VERSION_BUMP" = "major" ]; then
            COMMAND="poetry run semantic-release -v version --major"
          fi
          echo "Running command: $COMMAND"
          /usr/bin/xvfb-run -s "-screen 0 1920x1080x24 +extension GLX +extension RENDER" $COMMAND
          COMMAND="poetry run semantic-release -v publish"
          echo "Running command: $COMMAND"
          /usr/bin/xvfb-run -s "-screen 0 1920x1080x24 +extension GLX +extension RENDER" $COMMAND
      - name: Push to smithed
        continue-on-error: true
        run: poetry run python .github/workflows/push-to-smithed.py 
        env:
          SMITHED_UID: ${{ secrets.SMITHED_UID }}
          SMITHED_TOKEN: ${{ secrets.SMITHED_TOKEN }}
      - name: Push to Modrinth
        continue-on-error: true
        run: poetry run python .github/workflows/push-to-modrinth.py 
        env:
          MODRINTH_AUTH_TOKEN: ${{ secrets.MODRINTH_AUTH_TOKEN }}
