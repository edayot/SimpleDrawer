name: Make a release
on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Overide the automatic version bump (default: automatic)'
        required: true
        default: 'automatic'
        type: choice
        options:
        - automatic
        - patch
        - minor
        - major

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: 3.12
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Setup cache for dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{  runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install
      
      - name: Setup OpenGL and Run Tests
        uses: edayot/model_resolver@master
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_HASH: ${{ github.sha }}
          VERSION_BUMP: ${{ github.event.inputs.version_bump }}
        with:
          commands: |
            git config --global user.name "github-actions"
            git config --global user.email "action@github.com"
            # print the version bump
            echo "Version bump: $VERSION_BUMP"
            if [ "$VERSION_BUMP" = "automatic" ]; then
              poetry run semantic-release -v version
            fi
            if [ "$VERSION_BUMP" = "patch" ]; then
              poetry run semantic-release -v version --patch
            fi
            if [ "$VERSION_BUMP" = "minor" ]; then
              poetry run semantic-release -v version --minor
            fi
            if [ "$VERSION_BUMP" = "major" ]; then
              poetry run semantic-release -v version --major
            fi
            poetry run semantic-release -v publish

      - name: Push to smithed
        continue-on-error: true
        run: poetry run python .github/workflows/push-to-smithed.py 
        env:
          SMITHED_UID: ${{ secrets.SMITHED_UID }}
          SMITHED_TOKEN: ${{ secrets.SMITHED_TOKEN }}
      - name: Push to Modrinth
        continue-on-error: true
        run: poetry run python .github/workflows/push-to-modrinth.py 
        env:
          MODRINTH_AUTH_TOKEN: ${{ secrets.MODRINTH_AUTH_TOKEN }}
